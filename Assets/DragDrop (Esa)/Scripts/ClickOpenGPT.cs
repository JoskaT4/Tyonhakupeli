using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using UnityEngine.EventSystems;
using System;


public class ClickOpenGPT : MonoBehaviour, IPointerDownHandler //Message from programmer: Due to inexperience, I had to use ChatGPT to solve an issue that I couldn't without wasting too much time on studying the matter. So InstantiateCaller method was generated by ChatGPT (Probably obvious).
{


    public GameObject CurrulumVitae;
    private RectTransform rectTransform;
    float muhFloat = 1;
    private Vector3 cvPosition = new Vector3(0, 3, 2);


    void Start()
    {
        rectTransform = GetComponent<RectTransform>();

    }
    public void OnPointerDown(PointerEventData eventData)
    {
        Debug.Log("CLICK!");
        Invoke("InstantiateCaller", muhFloat);
    }

    void InstantiateCaller()
    {
        // Find the "Desktop" GameObject with the correct tag
        GameObject desktop = GameObject.FindGameObjectWithTag("Desktop");

        if (desktop != null)
        {
            // Find the "Email" GameObject by its name
            GameObject Email = GameObject.Find("Email"); // Ensure this matches the name in the Unity hierarchy

            if (Email != null)
            {
                // Get RectTransforms
                RectTransform emailRectTransform = Email.GetComponent<RectTransform>();
                RectTransform desktopRectTransform = desktop.GetComponent<RectTransform>();

                if (emailRectTransform != null && desktopRectTransform != null)
                {
                    // Convert the Email icon's position to Desktop's coordinate space
                    Vector2 anchoredPosition = emailRectTransform.anchoredPosition; // Get Email's position
                    Vector3 worldPosition = emailRectTransform.position; // Get Email's world position
                    Vector2 localPositionOnDesktop = Vector2.zero;

                    // Use RectTransformUtility to convert world position to local position relative to Desktop
                    RectTransformUtility.ScreenPointToLocalPointInRectangle(
                        desktopRectTransform,
                        RectTransformUtility.WorldToScreenPoint(null, worldPosition),
                        null,
                        out localPositionOnDesktop
                    );

                    // Define the offset for the item placement
                    Vector2 offset = new Vector2(50, 0); // Adjust as needed (e.g., 50 units to the right of Email)

                    // Create a new instance of CurriculumVitae as a child of Desktop
                    GameObject newCV = Instantiate(CurrulumVitae, desktop.transform);

                    // Get the RectTransform of the new object
                    RectTransform newRectTransform = newCV.GetComponent<RectTransform>();

                    if (newRectTransform != null)
                    {
                        // Set the new position (Email's local position + offset)
                        newRectTransform.anchoredPosition = localPositionOnDesktop + offset;

                        // Optionally, reset the scale and rotation
                        newRectTransform.localScale = Vector3.one;
                        newRectTransform.localRotation = Quaternion.identity;
                    }

                }
 
            }

        }
 
    }
}
